{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,0BAAMC,SATa,SAAAC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAAAP,GACxBF,EAAcE,EAAEQ,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,gDACgCC,UACnDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEvC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAAAA,GAAa,IAAD,EACZd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH2B,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAAAC,GACrBC,YAAW,WAETJ,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAEV,UAEJ,CAACpB,IAEGqB,EDT2BM,CAAa3B,GAAjCa,EANyB,EAM/BN,KAAca,EANiB,EAMjBA,QAEtB,OACE,oCACE,4BAAKpB,EAAL,KACCoB,GAAW,yCAEV,yBAAKJ,UAAU,aACZH,EAAOJ,KAAI,SAAAC,GAAG,OACb,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAAQD,UEjB7BmB,EAAe,WAAO,IAAD,EACI3C,mBAAS,CAAC,eADd,mBACzB4C,EADyB,KACb7C,EADa,KAGhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG6C,EAAWrB,KAAI,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CAAS4B,IAAK5B,EAAUA,SAAUA,U,MCR5C+B,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.d0a7b7b6.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (inputValue.trim().length > 2) {\n      setCategories(cats => [inputValue, ...cats])\n      setInputValue('')\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n}\n","export const getGifs = async category => {\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=U9dsPS74aMi2GcL7AiVzIEBkoSWZVrXV`\n  const resp = await fetch(url)\n  const { data } = await resp.json()\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    }\n  })\n  return gifs\n}\n","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n  // console.log({ id, title, url })\n  return (\n    <div className=\"card animate__animated animate__bounce\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","// import React, { useState, useEffect } from 'react'\nimport React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\n// import { getGifs } from '../helpers/getGifs'\n\nexport const GifGrid = ({ category }) => {\n  // const [images, setImages] = useState([])\n  // useEffect(() => {\n  //   getGifs(category).then(setImages)\n  // }, [category])\n\n  const { data: images, loading } = useFetchGifs(category)\n\n  return (\n    <>\n      <h3>{category} </h3>\n      {loading && <p>Loading...</p>}\n      {\n        <div className=\"card-grid\">\n          {images.map(img => (\n            <GifGridItem key={img.id} {...img} />\n          ))}\n        </div>\n      }\n    </>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = category => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  })\n\n  useEffect(() => {\n    getGifs(category).then(imgs => {\n      setTimeout(() => {\n        // console.log(imgs)\n        setState({\n          data: imgs,\n          loading: false,\n        })\n      }, 1000)\n    })\n  }, [category])\n\n  return state\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState(['Rafa Nadal'])\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map(category => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <GifExpertApp />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}